# README FIRST
# 1. If you don't have unit tests, remove that section.
# 2. If your collection depends on other collections ensure they are installed,
#    add them to the "test-deps" input.
# 3. For the comprehensive list of the inputs supported by the
#    ansible-community/ansible-test-gh-action GitHub Action, see
#    https://github.com/marketplace/actions/ansible-test.
# 4. If you need help please ask in #ansible-community on the Libera.chat IRC
#    network.

name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches:
      - main
      - stable-*
  pull_request:
  # Run CI once every Sunday (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still
  # testing against latest version of ansible-test for each ansible-core
  # version
  schedule:
    - cron: '0 6 * * 0'
  # manual
  workflow_dispatch:

jobs:

###
# Sanity tests (REQUIRED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity:
    name: Sanity (Ansible ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          # An alternative to `devel` is the `milestone` branch with
          # gets synchronized with `devel` every few weeks and therefore
          # tends to be a more stable target. Be aware that it is not updated
          # around creation of a new stable branch, this might cause a problem
          # that two different versions of ansible-test use the same sanity test
          # ignore.txt file.
        # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10 # Only if your collection supports ansible-base 2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
        # - stable-2.14
          - devel
        # - milestone
    runs-on: ubuntu-latest
    steps:
      # Run sanity tests inside a Docker container.
      # The docker container has all the pinned dependencies that are
      # required and all Python versions Ansible supports.
      - name: Perform sanity testing
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity
          # OPTIONAL If your sanity tests require code
          # from other collections, install them like this
          test-deps: >-
            git+https://github.com/ansible-collections/ansible.netcommon.git

###
# Unit tests (OPTIONAL)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_units.html

  units:
    runs-on: ubuntu-latest
    name: Units (Ansible ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      # As soon as the first unit test fails, cancel the others to free up the CI queue
      fail-fast: false
      matrix:
        ansible:
          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10 # Only if your collection supports ansible-base 2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          # - stable-2.14
          - devel
          # - milestone
        python:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        exclude:
          # no support 
          - ansible: stable-2.10
            python: "3.10"
          - ansible: stable-2.11
            python: "3.10"
    steps:
      - name: >-
          Perform unit testing against
          Ansible version ${{ matrix.ansible }}
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          target-python-version: ${{ matrix.python }}
          testing-type: units
          # OPTIONAL If your unit tests require code
          # from other collections, install them like this
          test-deps: >-
            ansible.netcommon
            ansible.utils
